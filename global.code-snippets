{
	"JS comment block": {
		"scope": "javascript,typescript,svelte",
		"prefix": "cmt",
		"body": [
			"////////////////////////////////////",
			"// $1",
			"////////////////////////////////////"
		]
	},
	"Print to console": {
		"scope": "javascript,typescript,svelte",
		"prefix": "clg",
		"body": ["console.log($0);"],
		"description": "Log output to console"
	},
	"Script tags for TS": {
		"prefix": "sct",
		"body": ["<script lang=\"ts\">", "$0", "</script>"]
	},
	"Script tags for TS module": {
		"prefix": "sctm",
		"body": ["<script lang=\"ts\" context=\"module\">", "$0", "</script>"]
	},
	"undefined as unknown as": {
		"prefix": "uau",
		"body": ["undefined as unknown as $0"]
	},
	"readonlyBox": {
		"prefix": "robox",
		"body": ["readonlyBox(() => $0)"]
	},
	"SvelteKit Submit Function": {
		"prefix": "kitSubmit",
		"body": [
			"const submit$1: SubmitFunction$0 = () => {",
			"\treturn async ({ result, update }) => {",
			"\t\tswitch (result.type) {",
			"\t\t\tcase 'success':",
			"\t\t\t\tbreak",
			"\t\t\tcase 'failure':",
			"\t\t\t\tbreak",
			"\t\t\tdefault:",
			"\t\t\t\tbreak",
			"\t\t}",
			"\t\tawait update()",
			"\t}",
			"}"
		],
		"description": "SvelteKit Submit Function"
	},
	"SvelteKit Fail": {
		"prefix": "kitFail",
		"body": ["return fail($1, { message: '$2' })"],
		"description": "Return fail SvelteKit"
	},
	"Typescript Generic T extends Record": {
		"prefix": "trec",
		"body": ["<T extends Record<PropertyKey, unknown>$1"],
		"description": "Typescript Generic T extends Record"
	},
	"Svelte export classname": {
		"prefix": "cls",
		"body": [
			"let className: string | undefined | null = undefined;",
			"export { className as class }"
		],
		"description": "Svelte export classname"
	},
	"CN & Classnames": {
		"prefix": "scn",
		"body": [
			"import { cn } from '$$lib/utils'",
			"let className: string | undefined | null = undefined",
			"export { className as class }"
		],
		"description": "Setup CN & classnames for svelte"
	},
	"SVG Attrs": {
		"prefix": "icon",
		"body": [
			"<script lang=\"ts\">",
			"\timport type { SVGAttributes } from 'svelte/elements'",
			"\ttype $$$Props = SVGAttributes<SVGElement>;",
			"</script>",
			"$1"
		]
	},
	"Rest Props": {
		"prefix": "rp",
		"body": [
			"{...$$$restProps}$1"
		]
	},
	"currentColor":{
		"prefix": "cc",
		"body": [
			"currentColor"
		]

	},
	"export default":{
		"prefix": "ed",
		"body": [
			"export { default as $1 } from './$2'"
		]
	},
	"waitFor": {
		"prefix": "wf",
		"body": ["await waitFor(() => expect($1));"],
		"description": "Wait for expect helper",
	},
}
